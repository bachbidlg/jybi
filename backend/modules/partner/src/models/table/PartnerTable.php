<?php

namespace milkyway\partner\models\table;

use backend\modules\user\models\User;
use cheatsheet\Time;
use milkyway\partner\models\query\PartnerQuery;
use Yii;
use yii\db\ActiveRecord;

class PartnerTable extends \yii\db\ActiveRecord
{
    const STATUS_DISABLED = 0;
    const STATUS_PUBLISHED = 1;

    public $pathImage;
    public $urlImage;

    public function __construct($config = [])
    {
        $this->pathImage = Yii::getAlias('@frontend/web/uploads/partners');
        $this->urlImage = Yii::getAlias('@frontendUrl/uploads/partners');
        parent::__construct($config);
    }

    public static function tableName()
    {
        return 'partner';
    }

    public static function find()
    {
        return new PartnerQuery(get_called_class());
    }

    public function afterDelete()
    {
        $cache = Yii::$app->cache;
        $keys = [];
        foreach ($keys as $key) {
            $cache->delete($key);
        }
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        $cache = Yii::$app->cache;
        $keys = [];
        foreach ($keys as $key) {
            $cache->delete($key);
        }
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    /**
     * Gets query for [[User]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getUserCreated()
    {
        return $this->hasOne(User::class, ['id' => 'created_by']);
    }

    /**
     * Gets query for [[User]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getUserUpdated()
    {
        return $this->hasOne(User::class, ['id' => 'updated_by']);
    }
}
