<?php

namespace milkyway\news\models\table;

use common\models\User;
use milkyway\news\models\query\NewsQuery;
use Yii;

class NewsTable extends \yii\db\ActiveRecord
{
    const STATUS_DISABLED = 0;
    const STATUS_PUBLISHED = 1;
    const CHECK_HOT = 1;
    public $pathImage;
    public $urlImage;

    public function init()
    {
        $this->pathImage = Yii::getAlias('@frontend/web/uploads/news');
        $this->urlImage = Yii::getAlias('@frontendUrl/uploads/news');
        parent::init(); // TODO: Change the autogenerated stub
    }

    public static function tableName()
    {
        return 'news';
    }

    public static function find()
    {
        return new NewsQuery(get_called_class());
    }

    public function afterDelete()
    {
        $cache = Yii::$app->cache;
        $keys = [
            'redis-news-get-by-id-' . $this->id,
            'redis-news-get-by-slug-' . $this->slug,
            'redis-news-get-by-category-' . $this->category,
            'redis-news-get-by-alias-' . $this->alias,
            'redis-news-get-by-hot-' . $this->hot,
            'redis-news-get-all',
        ];
        foreach ($keys as $key) {
            $cache->delete($key);
        }
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        $cache = Yii::$app->cache;
        $keys = [
            'redis-news-get-by-id-' . $this->id,
            'redis-news-get-by-slug-' . $this->slug,
            'redis-news-get-by-category-' . $this->category,
            'redis-news-get-by-alias-' . $this->alias,
            'redis-news-get-by-hot-' . $this->hot,
            'redis-news-get-all',
        ];
        foreach ($keys as $key) {
            $cache->delete($key);
        }
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    /**
     * Gets query for [[User]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getUserCreated()
    {
        return $this->hasOne(User::class, ['id' => 'created_by']);
    }

    /**
     * Gets query for [[User]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getUserUpdated()
    {
        return $this->hasOne(User::class, ['id' => 'updated_by']);
    }

    public function getCategoryHasOne()
    {
        return $this->hasOne(NewsCategoryTable::class, ['id' => 'category']);
    }

    public function getNewsLanguage()
    {
        return $this->hasMany(NewsLanguageTable::class, ['news_id' => 'id'])->indexBy('language_id');
    }

    public function getImage()
    {
        return Yii::$app->assetManager->publish($this->pathImage . '/' . $this->image)[1];
    }

    public static function getById($id)
    {
        $cache = Yii::$app->cache;
        $key = 'redis-news-get-by-id-' . $id;
        $data = $cache->get($key);
        if ($data == false) {
            $query = self::find()->where([self::tableName() . '.id' => $id]);
            $data = $query->one();
            $cache->set($key, $data);
        }
        return $data;
    }

    public static function getBySlug($slug)
    {
        $cache = Yii::$app->cache;
        $key = 'redis-news-get-by-slug-' . $slug;
        $data = $cache->get($key);
        if ($data == false) {
            $query = self::find()->where([self::tableName() . '.slug' => $slug]);
            $data = $query->one();
            $cache->set($key, $data);
        }
        return $data;
    }

    public static function getCheckHot($hot)
    {
        $cache = Yii::$app->cache;
        $key = 'redis-news-get-by-hot-' . $hot;
        $data = $cache->get($key);
        if ($data == false) {
            $query = self::find()->where([self::tableName() . '.hot' => $hot]);
            $data = $query->one();
            $cache->set($key, $data);
        }
        return $data;
    }

    public static function getAll()
    {
        $cache = Yii::$app->cache;
        $key = 'redis-news-get-all';
        $data = $cache->get($key);
        if ($data == false) {
            $query = self::find()->sort();
            $data = $query->all();
            $cache->set($key, $data);
        }
        return $data;
    }

    public static function getByCategory($category = null, $limit = null)
    {
        $cache = Yii::$app->cache;
        $key = 'redis-news-get-by-category-' . $category;
        $data = $cache->get($key);
        if ($data == false) {
            $query = self::find()->where([self::tableName() . '.category' => $category]);
            if ($limit != null) $query->limit($limit)->offset(0);
            $query->sort();
            $data = $query->all();
            $cache->set($key, $data);
        }
        return $data;
    }

    public static function getByAlias($alias = null, $limit = null)
    {
        $cache = Yii::$app->cache;
        $key = 'redis-news-get-by-alias-' . $alias;
        $data = $cache->get($key);
        if ($data == false) {
            $query = self::find()->where(self::tableName() . ".alias LIKE '{$alias}/%'");
            if ($limit != null) $query->limit($limit)->offset(0);
            $query->sort();
            $data = $query->all();
            $cache->set($key, $data);
        }
        return $data;
    }
}
